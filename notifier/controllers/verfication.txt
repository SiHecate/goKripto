package verification

import (
	model "cryptoApp/Model"
	"cryptoApp/database"
	helper "cryptoApp/helpers"

	"github.com/gofiber/fiber/v2"
)


func Verfication(c *fiber.Ctx) error {
	issuer, err := helper.GetIssuer(c)
	if err != nil {
		return err
	}
	var data struct {
		Email       string `json:"email"`
		Verfication bool   `json:"verfication"`
	}

	if err := c.BodyParser(&data); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"message": "Invalid request data",
		})
	}

	user, err := model.GetUserByIssuer(database.Conn, issuer)
	if err != nil {
		return c.Status(fiber.StatusNotFound).JSON(fiber.Map{
			"message": "User not found",
		})
	}

	type Verfication struct {
		Name  string
		Email string
	}

	response := Verfication{
		Name:  user.Name,
		Email: user.Email,
	}
	return c.JSON(response)
}
