version: '3.8'

networks:
  mynetwork:
    driver: bridge

services:
  go-app:
    networks:
      - mynetwork
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: Kripto-app
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    command: air ./main.go -b 0.0.0.0
    volumes:
      - ./:/app

  postgres:
    networks:
      - mynetwork
    image: postgres:15.0
    container_name: Kripto-Postgres
    environment:
      POSTGRES_DB: kriptoDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 393406
    ports:
      - "5435:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data

  prometheus:
    networks:
      - mynetwork
    image: prom/prometheus:v2.40.4
    container_name: Prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    networks:
      - mynetwork
    image: grafana/grafana
    container_name: Grafana
    ports:  
      - 3000:3000
    volumes:
      - ./:/goKripto/datasources.yml

  loki:
    networks:
      - mynetwork
    image: grafana/loki:2.4.0
    volumes:
      - /home/umut/goKripto/var/volumes/loki/loki-config.yml:/etc/loki/local-config.yml   
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yml 


  promtail:
    networks:
      - mynetwork
    image: grafana/promtail:2.4.0
    volumes:
      - /var/log:/var/log
      - /home/umut/goKripto/var/volumes/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml   
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml


volumes:
  grafana:
  postgres-db: